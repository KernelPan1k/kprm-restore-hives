#!/bin/sh

MOUNT_POINT=/mnt/windows
KPRM_PATH=$MOUNT_POINT/KPRM/backup
BACKUP_DATE=$(date +"%Y_%m_%d_%I_%M_%p")
LOG_FILE=/mnt/windows/kprm_restore_${BACKUP_DATE}.txt

log() {
  # shellcheck disable=SC2039
  echo -e "$1 \r\n" | tee -a "$LOG_FILE"
}

quit() {
  echo "Exit"
  cd /

  if [ -n "$1" ]; then
    umount "$1"
  fi

  exit 0
}

restore_the_backup() {
  if [ -z "$1" ] || [ ! -d $KPRM_PATH/"$1" ]; then
    echo "Unknown folder $1"
    quit "$2"
  fi

  backup_path=$KPRM_PATH/$1

  cd "$backup_path" || exit

  log "Restore hives in backup $1 at $BACKUP_DATE"
  log " "
  cp -Rfv . $MOUNT_POINT | tee -a "$LOG_FILE"
  log " "

  hives_list=$(find . -type f -print)

  cd $MOUNT_POINT || exit

  for hive in $hives_list; do
    if [ -f "$hive" ]; then
      hive_path=$(dirname "$hive")
      hive_name=$(basename "$hive" | tr '[:lower:]' '[:upper:]')

      if [ "$hive_name" = "NTUSER.DAT" ]; then
        log "Restore Attributes +h +s +a for $hive_name located in $hive_path"
        ntfs_attr +h +s +a "$hive" | tee -a "$LOG_FILE"
      elif [ "$hive_name" = "USRCLASS.DAT" ]; then
        log "Restore Attributes +h +a for $hive_name located in $hive_path"
        ntfs_attr +h +a "$hive" | tee -a "$LOG_FILE"
      else
        log "Restore Attributes +a for $hive_name located in $hive_path"
        ntfs_attr +a "$hive" | tee -a "$LOG_FILE"
      fi
    else
      log "Hive $hive not found"
    fi
  done

  log " "
  log "Restore Finish"
  log "Log is located in $LOG_FILE"
  log " "

  quit "$2"
}

mkdir -p /mnt/windows
umount /mnt/windows >/dev/null 2>&1

devices=$(fdisk -l | grep '^\/dev' | grep -i ntfs | expand | cut -d ' ' -f1)

for device in $devices; do
  ntfs-3g "$device" $MOUNT_POINT
  cd /mnt/windows || exit

  if [ -d $KPRM_PATH ]; then

    cd $KPRM_PATH || exit
    valid=0

    while [ $valid -eq 0 ]; do

      folders=$(find ./* -maxdepth 0 -type d | tr -d "/.")
      i=1

      echo "Which backup do you want to restore (write the number of the selected command)?"

      for folder in $folders; do
        echo "[$i]: $folder"
        i=$((i + 1))
      done

      echo "[$i]: Quit"
      read -r user_choice

      if [ "$user_choice" -eq $i ]; then
        valid=1
        quit "$device"

      elif [ "$user_choice" -ge 1 ] && [ "$user_choice" -lt $i ]; then
        c=1

        for folder_choice in $folders; do
          if [ $c -eq "$user_choice" ]; then
            valid=1
            restore_the_backup "$folder_choice" "$device"
            quit "$device"
          fi
          c=$((c + 1))
        done

      else
        echo "Bad Choice"
      fi

    done
  else
    cd /
    umount "$device"
  fi
done
